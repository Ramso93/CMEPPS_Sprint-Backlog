/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Sprint;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Ramso
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    VentanListarElementos ven = new VentanListarElementos();
    VentanaComplejidad vc = new VentanaComplejidad();
    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        setLocationRelativeTo(null);
        je2.setVisible(false);
        input2.setVisible(false);
        je3.setVisible(false);
        input3.setVisible(false);
        je4.setVisible(false);
        input4.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnAñadir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tiposE = new javax.swing.JComboBox<>();
        je1 = new javax.swing.JLabel();
        input1 = new javax.swing.JTextField();
        je2 = new javax.swing.JLabel();
        input2 = new javax.swing.JTextField();
        je5 = new javax.swing.JLabel();
        input5 = new javax.swing.JTextField();
        input3 = new javax.swing.JTextField();
        je3 = new javax.swing.JLabel();
        input4 = new javax.swing.JTextField();
        je4 = new javax.swing.JLabel();
        btnComplejidad = new javax.swing.JButton();
        btnPFNA = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAñadir.setText("Añadir");
        btnAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirActionPerformed(evt);
            }
        });

        jLabel1.setText("Elemento funcional:");

        tiposE.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "seleccionar tipo", "EE", "SE", "CE", "FLI", "FLE" }));
        tiposE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tiposEActionPerformed(evt);
            }
        });

        je1.setText("Nombre:");

        je2.setText("Nº Ficheros  Referenciados:");

        je5.setText("Nº  Datos Elementales:");

        je3.setText("Nº Ficheros  Relacionados");

        je4.setText("Nº Tipos de Registros");

        btnComplejidad.setText("Calcular Complejidad");
        btnComplejidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComplejidadActionPerformed(evt);
            }
        });

        btnPFNA.setText("Calcular PFNA");
        btnPFNA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPFNAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(je1)
                            .addComponent(jLabel1)
                            .addComponent(je2)
                            .addComponent(je3)
                            .addComponent(je4)
                            .addComponent(je5))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(input5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(input4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(input1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(input3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(input2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tiposE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(155, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(btnComplejidad, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnPFNA, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tiposE, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(je1)
                    .addComponent(input1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(je2)
                    .addComponent(input2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(je3)
                    .addComponent(input3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(je4)
                    .addComponent(input4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(je5)
                    .addComponent(input5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAñadir)
                    .addComponent(btnComplejidad)
                    .addComponent(btnPFNA))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(62, 62, 62))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirActionPerformed
        // TODO add your handling code here:
        
        ven.setLocationRelativeTo(null);
        if (tiposE.getSelectedItem().toString().equals("EE")) {
            if (!input3.getText().equals("") && !input1.getText().equals("") && !input5.getText().equals("")) {
                ven.setVisible(true);
                ven.introducirElemento(tiposE.getSelectedItem().toString(), input1.getText(), input5.getText(), input3.getText());
            } else {
                JOptionPane.showMessageDialog(null, "Asegurese de haber rellenado todos los campos.");
            }
        }
        if (tiposE.getSelectedItem().toString().matches("SE|CE")) {
            if (!input2.getText().equals("") && !input1.getText().equals("") && !input5.getText().equals("")) {
                ven.setVisible(true);
                ven.introducirElemento(tiposE.getSelectedItem().toString(), input1.getText(), input5.getText(), input2.getText());

            } else {
                JOptionPane.showMessageDialog(null, "Asegurese de haber rellenado todos los campos.");
            }
        }
        if (tiposE.getSelectedItem().toString().matches("FLI|FLE")) {
            if (input4.getText().equals("") && input1.getText().equals("") && input5.getText().equals("")) {
                ven.setVisible(true);
                ven.introducirElemento(tiposE.getSelectedItem().toString(), input1.getText(), input5.getText(), input4.getText());

            } else {
                JOptionPane.showMessageDialog(null, "Asegurese de haber rellenado todos los campos.");
            }
        }
        JOptionPane.showMessageDialog(null, "Recuerde calcular la complejidad del elemento que acaba de añadir para que este se tenga en cuenta","Alert",JOptionPane.WARNING_MESSAGE);
        resetEntradas();

    }//GEN-LAST:event_btnAñadirActionPerformed

    private void tiposEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tiposEActionPerformed
        // TODO add your handling code here:

        if (tiposE.getSelectedItem().toString().equals("EE")) {
            je3.setVisible(true);
            input3.setVisible(true);
            je2.setVisible(false);
            input2.setVisible(false);

            je4.setVisible(false);
            input4.setVisible(false);
        } else if (tiposE.getSelectedItem().toString().matches("SE|CE")) {
            je2.setVisible(true);
            input2.setVisible(true);

            je3.setVisible(false);
            input3.setVisible(false);
            je4.setVisible(false);
            input4.setVisible(false);
        } else if (tiposE.getSelectedItem().toString().matches("FLI|FLE")) {
            je4.setVisible(true);
            input4.setVisible(true);
            je2.setVisible(false);
            input2.setVisible(false);
            je3.setVisible(false);
            input3.setVisible(false);
        }

    }//GEN-LAST:event_tiposEActionPerformed

    private void btnComplejidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComplejidadActionPerformed
        // TODO add your handling code here:
        String[] datos = ven.getElemento();
        String complejidad = "Sin valor.";
        int noElementos = Integer.parseInt(datos[0]);
        int noEntrada = Integer.parseInt(datos[1]);
        if (datos[2].equals("EE")) {
            if (noElementos >= 1 && noElementos <= 4) {
                if (noEntrada >= 0 && noEntrada <= 2) {
                    complejidad = "S";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                } else if (noEntrada >= 3) {
                    complejidad = "M";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                }
            } else if (noElementos >= 5 && noElementos <= 15) {
                if (noEntrada == 0 || noEntrada == 1) {
                    complejidad = "S";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                } else if (noEntrada == 2) {
                    complejidad = "M";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                } else if (noEntrada >= 3) {
                    complejidad = "C";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                }
            } else if (noElementos >= 16) {
                if (noEntrada == 0 || noEntrada == 1) {
                    complejidad = "M";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                } else if (noEntrada >= 2) {
                    complejidad = "C";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                }
            }
        } else if (datos[2].matches("SE|CE")) {
            if (noElementos >= 1 && noElementos <= 5) {
                if (noEntrada >= 0 && noEntrada <= 3) {
                    complejidad = "S";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                } else if (noEntrada >= 4) {
                    complejidad = "M";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                }
            } else if (noElementos >= 6 && noElementos <= 19) {
                if (noEntrada == 0 || noEntrada == 1) {
                    complejidad = "S";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                } else if (noEntrada == 2 || noEntrada==3) {
                    complejidad = "M";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                } else if (noEntrada >= 4) {
                    complejidad = "C";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                }
            } else if (noElementos >= 20) {
                if (noEntrada == 0 || noEntrada == 1) {
                    complejidad = "M";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                } else if (noEntrada >= 2) {
                    complejidad = "C";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                }
            }
        } else if (datos[2].matches("FLI|FLE")) {
            if (noElementos >= 1 && noElementos <= 19) {
                if (noEntrada >= 1 && noEntrada <= 5) {
                    complejidad = "S";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                } else if (noEntrada >= 6) {
                    complejidad = "M";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                }
            } else if (noElementos >= 20 && noElementos <= 50) {
                if (noEntrada >= 1) {
                    complejidad = "S";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                } else if (noEntrada >= 2 && noEntrada <= 5) {
                    complejidad = "M";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                } else if (noEntrada >= 6) {
                    complejidad = "C";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                }
            } else if (noElementos >= 51) {
                if (noEntrada >= 2) {
                    complejidad = "C";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                } else if (noEntrada == 1) {
                    complejidad = "M";
                    vc.añadirComplejidad(datos[2],complejidad);
                    vc.setVisible(true);
                }
            }
        }
        JOptionPane.showMessageDialog(null, "La complejidad del elemento funcional " + datos[2] + " es  " + complejidad);
    }//GEN-LAST:event_btnComplejidadActionPerformed

    private void btnPFNAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPFNAActionPerformed
        if (vc.calcularPFNA() == 0) {
            JOptionPane.showMessageDialog(null, "Debe añadir y calcular la complejidad de los elementos si desea calcular el PFNA.","Alert",JOptionPane.WARNING_MESSAGE);
        }
        else{
            JOptionPane.showMessageDialog(null, "El PFNA es igual a " + vc.calcularPFNA());
        }
    }//GEN-LAST:event_btnPFNAActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAñadir;
    private javax.swing.JButton btnComplejidad;
    private javax.swing.JButton btnPFNA;
    private javax.swing.JTextField input1;
    private javax.swing.JTextField input2;
    private javax.swing.JTextField input3;
    private javax.swing.JTextField input4;
    private javax.swing.JTextField input5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel je1;
    private javax.swing.JLabel je2;
    private javax.swing.JLabel je3;
    private javax.swing.JLabel je4;
    private javax.swing.JLabel je5;
    private javax.swing.JComboBox<String> tiposE;
    // End of variables declaration//GEN-END:variables

    private void resetEntradas() {
        input1.setText("");
        input2.setText("");
        input3.setText("");
        input4.setText("");
        input5.setText("");
    }
}
