/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Sprint;

import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jhony
 */
public class VentanListarElementos extends javax.swing.JFrame {

    /**
     * Creates new form VentanListarElementos
     */
    DefaultTableModel modelo;

    public VentanListarElementos() {
        initComponents();
        modelo = new DefaultTableModel();
        modelo.addColumn("Tipo");
        modelo.addColumn("Nombre");
        modelo.addColumn("Nº Datos Elementales");
        modelo.addColumn("Nº Ficheros Referenciados");
        modelo.addColumn("Nº Ficheros Relacionados");
        modelo.addColumn("Nº Registros");
        this.tablaElementos.setModel(modelo);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaElementos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ELEMENTOS FUNCIONALES");

        tablaElementos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jScrollPane2.setViewportView(tablaElementos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(406, 406, 406)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 954, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(143, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanListarElementos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanListarElementos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanListarElementos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanListarElementos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanListarElementos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaElementos;
    // End of variables declaration//GEN-END:variables

    void introducirElemento(String tipo, String nombre, String noElemen, String entrada) {
        String[] info = new String[6];
        if (tipo.equals("EE")) {
            info[0] = tipo;
            info[1] = nombre;
            info[2] = noElemen;
            info[4] = entrada;
            info[3] = "---";
            info[5] = "---";
            modelo.addRow(info);
        } else if (tipo.matches("SE|CE")) {
            info[0] = tipo;
            info[1] = nombre;
            info[2] = noElemen;
            info[4] = "---";
            info[3] = entrada;
            info[5] = "---";
            modelo.addRow(info);
        } else if (tipo.matches("FLI|FLE")) {
            info[0] = tipo;
            info[1] = nombre;
            info[2] = noElemen;
            info[4] = "---";
            info[3] = "---";
            info[5] = entrada;
            modelo.addRow(info);
        }
    }

    public String[] getElemento() {
        String[] elemento = new String[3];
        int row = tablaElementos.getRowCount();
        if (tablaElementos.getValueAt(row-1, 0).equals("EE")) {
            elemento[0] = tablaElementos.getValueAt(row-1, 4).toString();
            elemento[1]=tablaElementos.getValueAt(row-1, 2).toString();
            elemento[2]=tablaElementos.getValueAt(row-1, 0).toString();
        } else if (tablaElementos.getValueAt(row-1, 0).toString().matches("SE|CE")) {
            elemento[0] = tablaElementos.getValueAt(row-1, 3).toString();
            elemento[1]=tablaElementos.getValueAt(row-1, 2).toString();
            elemento[2]=tablaElementos.getValueAt(row-1, 0).toString();
        } else if (tablaElementos.getValueAt(row-1, 0).toString().matches("FLI|FLE")) {
            elemento[0] = tablaElementos.getValueAt(row-1, 5).toString();
            elemento[1]=tablaElementos.getValueAt(row-1, 2).toString();
            elemento[2]=tablaElementos.getValueAt(row-1, 0).toString();
        }
        return elemento;
    }
}
